#!/usr/bin/env bash

# Define session name

SESSION=coderwall

# Go to working directory

cd $HOME/assemblymade/coderwall

rvm current

vagrant up

# Session Exists?

tmux has-session -t $SESSION
if [ $? -eq 0 ]; then
  echo "Session $SESSION already exists. Attaching."
  sleep 1
  tmux attach -t $SESSION
  exit 0;
fi

rm -rf log/*.log
rm -rf tmp/cache

bundle check || bundle install
bundle clean --force
bundle exec spring binstub --all

# Pre-flight Configuration

tmux -2 new-session -d -s $SESSION

# Create windows
tmux new-window -t $SESSION:1 -n "code"
tmux new-window -t $SESSION:2 -n "web"
tmux new-window -t $SESSION:3 -n "sidekiq"
tmux new-window -t $SESSION:4 -n "clock"

# Define window roles

# Code
tmux select-window -t $SESSION:1
tmux split-window -h
tmux split-window -v
tmux resize-pane -D 20

tmux select-pane -t 0
tmux send-keys "clear ; env bin/rails console" C-m
tmux select-pane -t 1
tmux send-keys "clear ; vim" C-m
tmux select-pane -t 2
tmux send-keys "clear ; bundle exec guard -c -g rspec" C-m

# Web
tmux select-window -t $SESSION:2
tmux select-pane -t 0
tmux send-keys "clear ; bundle exec rails server webrick -p3000" C-m
#tmux send-keys "clear ; bundle exec puma -C ./config/puma.rb" C-m

# Sidekiq
tmux select-window -t $SESSION:3
tmux select-pane -t 0
tmux send-keys "clear ; bundle exec sidekiq -C ./config/sidekiq.yml" C-m

# Clock
tmux select-window -t $SESSION:4
tmux select-pane -t 0
tmux send-keys "clear ; bundle exec clockwork app/clock.rb" C-m


# Set the initial working window
tmux select-window -t $SESSION:1

# Attach to named session
tmux -2 attach-session -t $SESSION
